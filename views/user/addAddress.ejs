
  <%- include('../layouts/userHeader.ejs') %>

<div class="flex min-h-screen bg-gray-100">
  <%- include('../layouts/profileSideBar') %>
  <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md flex-auto">
    <h2 class="text-2xl font-bold mb-6 text-center text-gray-800">Add New Address</h2>
    <form id="addressForm" action="/add-address" method="post" class="space-y-4">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Name:</label>
        <input type="text" id="name" name="fullName" value="Vighnesh SL" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="nameError" class="text-red-500 text-sm hidden">Name must be at least 3 characters long.</p>
      </div>
    
      <div>
        <label for="street" class="block text-sm font-medium text-gray-700 mb-1">Building/Address line:</label>
        <input type="text" id="street" name="street" value="Garden Street"
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="streetError" class="text-red-500 text-sm hidden">Building/Address line cannot be empty.</p>
      </div>
    
      <div>
        <label for="city" class="block text-sm font-medium text-gray-700 mb-1">City:</label>
        <input type="text" id="city" name="city" value="Trivandrum" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="cityError" class="text-red-500 text-sm hidden">City cannot be empty.</p>
      </div>
    
      <div>
        <label for="pincode" class="block text-sm font-medium text-gray-700 mb-1">Pincode:</label>
        <input type="text" id="pincode" name="pincode" value="686576" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="pincodeError" class="text-red-500 text-sm hidden">Pincode must be a 6-digit number.</p>
      </div>
    
      <div>
        <label for="state" class="block text-sm font-medium text-gray-700 mb-1">State:</label>
        <input type="text" id="state" name="state" value="Kerala" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="stateError" class="text-red-500 text-sm hidden">State cannot be empty.</p>
      </div>
    
      <div>
        <label for="country" class="block text-sm font-medium text-gray-700 mb-1">Country:</label>
        <input type="text" id="country" name="country" value="India" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="countryError" class="text-red-500 text-sm hidden">Country cannot be empty.</p>
      </div>
    
      <button type="submit" id="submitButton" class="w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300" >
        Add Address
      </button>
    </form>
  </div>
  
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
    const nameInput = document.getElementById('name');
    const streetInput = document.getElementById('street');
    const cityInput = document.getElementById('city');
    const pincodeInput = document.getElementById('pincode');
    const stateInput = document.getElementById('state');
    const countryInput = document.getElementById('country');
    const submitButton = document.getElementById('submitButton');

    const nameError = document.getElementById('nameError');
    const streetError = document.getElementById('streetError');
    const cityError = document.getElementById('cityError');
    const pincodeError = document.getElementById('pincodeError');
    const stateError = document.getElementById('stateError');
    const countryError = document.getElementById('countryError');

    // Regex patterns
    const pincodeRegex = /^\d{6}$/;
    const nameRegex = /^[A-Z][a-zA-Z]*$/; // First letter capitalized, no spaces

    // Helper function to validate and show/hide error
    function validateInput(input, error, validationFn) {
        if (validationFn(input.value.trim())) {
            error.classList.add('hidden');
            return true;
        } else {
            error.classList.remove('hidden');
            return false;
        }
    }

    // Specific validation functions
    function validateName(value) {
        return nameRegex.test(value) && value.length >= 3;
    }

    function validateNotEmpty(value) {
        return value !== '';
    }

    function validatePincode(value) {
        return pincodeRegex.test(value);
    }

    // Real-time validation event listeners
    nameInput.addEventListener("input", () => validateForm());
    streetInput.addEventListener("input", () => validateForm());
    cityInput.addEventListener("input", () => validateForm());
    pincodeInput.addEventListener("input", () => validateForm());
    stateInput.addEventListener("input", () => validateForm());
    countryInput.addEventListener("input", () => validateForm());

    function validateForm() {
        let isValid = true;

        // Validate each field
        isValid &= validateInput(nameInput, nameError, validateName);
        isValid &= validateInput(streetInput, streetError, validateNotEmpty);
        isValid &= validateInput(cityInput, cityError, validateNotEmpty);
        isValid &= validateInput(pincodeInput, pincodeError, validatePincode);
        isValid &= validateInput(stateInput, stateError, validateNotEmpty);
        isValid &= validateInput(countryInput, countryError, validateNotEmpty);

        // Enable or disable submit button based on form validity
        submitButton.disabled = !isValid;
    }

    // Initial validation call to set submit button state
    validateForm();
});
</script>

<%- include('../layouts/userFooter.ejs') %>