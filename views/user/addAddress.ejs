
  <%- include('../layouts/userHeader.ejs') %>

<div class="flex min-h-screen bg-gray-100">
  <%- include('../layouts/profileSideBar') %>
  <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md flex-auto">
    <h2 class="text-2xl font-bold mb-6 text-center text-gray-800">Add New Address</h2>
    <form id="addressForm" action="/add-address" method="post" class="space-y-4">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Name:</label>
        <input type="text" id="name" name="fullName" value="Vighnesh SL" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="nameError" class="text-red-500 text-sm hidden">Name must be at least 3 characters long.</p>
      </div>
    
      <div>
        <label for="street" class="block text-sm font-medium text-gray-700 mb-1">Building/Address line:</label>
        <input type="text" id="street" name="street" value="Garden Street"
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="streetError" class="text-red-500 text-sm hidden">Street cannot be empty.</p>
      </div>
    
      <div>
        <label for="city" class="block text-sm font-medium text-gray-700 mb-1">City:</label>
        <input type="text" id="city" name="city" value="Trivandrum" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="cityError" class="text-red-500 text-sm hidden">City cannot be empty.</p>
      </div>
    
      <div>
        <label for="pincode" class="block text-sm font-medium text-gray-700 mb-1">Pincode:</label>
        <input type="text" id="pincode" name="pincode" value="686576" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="pincodeError" class="text-red-500 text-sm hidden">Pincode must be a 6-digit number.</p>
      </div>
    
      <div>
        <label for="state" class="block text-sm font-medium text-gray-700 mb-1">State:</label>
        <input type="text" id="state" name="state" value="Kerala" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="stateError" class="text-red-500 text-sm hidden">State cannot be empty.</p>
      </div>
    
      <div>
        <label for="country" class="block text-sm font-medium text-gray-700 mb-1">Country:</label>
        <input type="text" id="country" name="country" value="India" required
               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
               oninput="validateForm()">
        <p id="countryError" class="text-red-500 text-sm hidden">Country cannot be empty.</p>
      </div>
    
      <button type="submit" id="submitButton" class="w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300" >
        Add Address
      </button>
    </form>
  </div>
  
</div>
<script>
    function validateForm() {
    let isValid = true;

    // Validate Name (Minimum 3 characters)
    const nameInput = document.getElementById('name');
    const nameError = document.getElementById('nameError');
    if (nameInput.value.trim().length < 3) {
      nameError.classList.remove('hidden');
      isValid = false;
    } else {
      nameError.classList.add('hidden');
    }

    // Validate Street (Cannot be empty)
    const streetInput = document.getElementById('street');
    const streetError = document.getElementById('streetError');
    if (streetInput.value.trim() === '') {
      streetError.classList.remove('hidden');
      isValid = false;
    } else {
      streetError.classList.add('hidden');
    }

    // Validate City (Cannot be empty)
    const cityInput = document.getElementById('city');
    const cityError = document.getElementById('cityError');
    if (cityInput.value.trim() === '') {
      cityError.classList.remove('hidden');
      isValid = false;
    } else {
      cityError.classList.add('hidden');
    }

    // Validate Pincode (Must be a 6-digit number)
    const pincodeInput = document.getElementById('pincode');
    const pincodeError = document.getElementById('pincodeError');
    const pincodeRegex = /^\d{6}$/; // Regex for 6-digit pincode
    if (!pincodeRegex.test(pincodeInput.value.trim())) {
      pincodeError.classList.remove('hidden');
      isValid = false;
    } else {
      pincodeError.classList.add('hidden');
    }

    // Validate State (Cannot be empty)
    const stateInput = document.getElementById('state');
    const stateError = document.getElementById('stateError');
    if (stateInput.value.trim() === '') {
      stateError.classList.remove('hidden');
      isValid = false;
    } else {
      stateError.classList.add('hidden');
    }

    // Validate Country (Cannot be empty)
    const countryInput = document.getElementById('country');
    const countryError = document.getElementById('countryError');
    if (countryInput.value.trim() === '') {
      countryError.classList.remove('hidden');
      isValid = false;
    } else {
      countryError.classList.add('hidden');
    }

    // Enable or disable submit button based on form validity
    const submitButton = document.getElementById('submitButton');
    submitButton.disabled = !isValid;
  }
</script>

<%- include('../layouts/userFooter.ejs') %>