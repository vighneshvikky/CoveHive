<%- include('../layouts/header.ejs') %>
<nav class="bg-[#f7f7f8] h-screen fixed top-0 left-0 min-w-[250px] py-6 px-4 font-[sans-serif]">
  
  <p class="ml-8 text-3xl">CoveHive</p>

  <div class="overflow-auto py-6 h-full mt-4">
    <ul class="space-y-1">
      <li>
        <a href="javascript:void(0)"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 512 512">
          </svg>
          <span>Dashboard</span>
        </a>
      </li>
      <li>
        <a href="/admin/customers"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 512 512">
          </svg>
          <span>Customers</span>
        </a>
      </li>
      <li>
        <a href="/admin/products"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 24 24">
          </svg>
          <span>Products</span>
        </a>
      </li>
      
      <li>
        <a href="/admin/addProducts"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all ">
            <g fill-opacity=".9">
            </g>
          </svg>
          <span class="ml-8">Add products</span>
        </a>
      </li>
  
      <li>
        <a href="/admin/coupons"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 512.003 512.003">
          </svg>
          <span>Coupons</span>
        </a>
      </li>
        <a href="/admin/orders"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 512.003 512.003">
          </svg>
          <span>Orders</span>
        </a>
      </li>
      <li>
        <a href="/admin/banners"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 511.877 511.877">
          </svg>
          <span>Banners</span>
        </a>
      </li>
      <li>
        <a href="/admin/offers"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 193.769 193.769">
          </svg>
          <span>Offers</span>
        </a>
      </li>
      <li>
        <a href="/admin/categories"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 512 512">
          </svg>
          <span>Categories</span>
        </a>
      </li>
      <li>
        <a href="/admin/logout"
          class="text-black hover:text-blue-600 text-[15px] flex items-center hover:bg-white rounded px-4 py-3 transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-[18px] h-[18px] mr-4"
            viewBox="0 0 6.35 6.35">
          </svg>
          <span>Logout</span>
        </a>
      </li>
    </ul>
  </div>
</nav>  

  <div class="container mx-auto px-4 py-8 flex items-center justify-center min-h-screen"> 


    <form action="/admin/product/add" method="POST" enctype="multipart/form-data" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-1/2" id="productForm" > <!-- Added ID here -->
      <!-- Product Name -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="name">
          Product Name
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="text" 
          id="name" 
          name="name"
          value="Apple" 
          required>
      </div>

      <!-- Description -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="description">
          Product Description
        </label>
        <textarea 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          id="description" 
          name="description" 
          rows="3"></textarea>
      </div>

      <!-- Price -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="price">
          Price
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="number" 
          id="price" 
          name="price" 
          value="2000"
          required>
      </div>

      <!-- Stock -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="stock">
          Stock
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="number" 
          id="stock" 
          name="stock"
          value="5" 
          required>
      </div>

      <!-- Category -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="category">
            Category
        </label>
        <select 
            id="category" 
            name="category" 
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
            required>
            <option value="">Select a Category</option>
            <% categories.forEach(category => { %>
                <option value="<%= category._id %>">
                    <%= category.name %>
                </option>
            <% }); %>
        </select>
      </div>
    
      <!-- Subcategory -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="subcategory">
          Subcategory
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="text" 
          id="subcategory" 
          name="subcategory"
          value="Apple 15 series" 
          required>
      </div>

      <!-- Compatible Devices -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="compatibleDevices">
          Compatible Devices (Comma separated)
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="text" 
          id="compatibleDevices" 
          value="iphone 15 Pro"
          name="compatibleDevices" 
          placeholder="iPhone 15 Pro, iPhone 15 Pro Max">
      </div>

      <!-- Image Upload -->
      <!-- <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="image">
          Product Images
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="file" 
          id="imageInput"  
          name="image" 
          multiple required>
      </div>
    
      

      <div class="font-[sans-serif] space-x-4 space-y-4 text-center">
        <button type="submit"
          class="px-5 py-2.5 rounded-lg text-sm tracking-wider font-medium border border-blue-700 outline-none bg-transparent hover:bg-blue-700 text-blue-700 hover:text-white transition-all duration-300">Add Product</button>
      </div>
    </form> -->
 <!-- Image Upload -->
 <div class="mb-4">
  <label class="block text-gray-700 text-sm font-bold mb-2" for="image">Product Images</label>
  <input class="shadow appearance-none border rounded w-full py-2 px-3 text-grey-700 leading-tight focus:outline-none focus:shadow-outline" type="file" id="imageInput" name="images" accept="image/*" multiple required>
</div>

<!-- Image Preview for Cropping -->
<div class="cropper-container max-w-lg mx-auto p-4 bg-gray-100 border rounded-lg">
  <div id="imagePreviews" class="flex flex-wrap justify-center gap-4">
    <!-- Dynamically insert image previews as background images -->
    <div class="w-32 h-32 rounded-lg bg-cover bg-center" style="background-image: url('image1.jpg');"></div>
    <div class="w-32 h-32 rounded-lg bg-cover bg-center" style="background-image: url('image2.jpg');"></div>
    <div class="w-32 h-32 rounded-lg bg-cover bg-center" style="background-image: url('image3.jpg');"></div>
    <div class="w-32 h-32 rounded-lg bg-cover bg-center" style="background-image: url('image4.jpg');"></div>
  </div>
</div>


<!-- Crop Buttons -->
<div class="flex justify-between mt-4">
  <button type="button" id="cropButton" style="display: none;">Crop Images</button>
  <button type="button" id="cancelButton" style="display: none;">Cancel</button>
</div>



  <!-- Submit Button -->
  <div class="font-[sans-serif] space-x-4 space-y-4 text-center mt-6">
    <button type="submit" class="px-5 py-2.5 rounded-lg text-sm tracking-wider font-medium border border-blue-700 outline-none bg-transparent hover:bg-blue-700 text-blue-700 hover:text-white transition-all duration-300">Add Product</button>
</div>

  </div>

  <!-- Modal -->

  <div id="confirmation-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center">
    <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
        <h2 class="text-lg font-bold mb-4">Confirm Action</h2>
        <p id="modal-message" class="mb-6"></p>
        <div class="flex justify-end">
            <button id="cancel-btn" class="bg-gray-500 text-white px-4 py-2 rounded mr-2" onclick="closeModal()">Cancel</button>
            <form id="confirm-form" action="" method="POST" style="display: inline;">
                <input type="hidden" name="is_blocked" id="isBlocked" value="" />
                <button type="submit" class="bg-red-500 text-white px-4 py-2 rounded">Confirm</button>
            </form>
        </div>
    </div>
</div>

<!-- Modal -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
  let cropperInstances = [];
const imageInput = document.getElementById('imageInput');
const imagePreviewsContainer = document.getElementById('imagePreviews');
const cropButton = document.getElementById('cropButton');
const cancelButton = document.getElementById('cancelButton');
const productForm = document.getElementById('productForm');

imageInput.addEventListener('change', function (event) {
    const files = event.target.files;
    imagePreviewsContainer.innerHTML = ''; // Clear previous previews
    cropperInstances = []; // Reset cropper instances

    for (let i = 0; i < files.length; i++) {
        const reader = new FileReader();
        reader.onload = function (e) {
            const imgElement = document.createElement('img');
            imgElement.src = e.target.result;
            imgElement.classList.add('preview-image'); // Add a class for styling
            imagePreviewsContainer.appendChild(imgElement);

            // Initialize Cropper.js for each image
            const cropper = new Cropper(imgElement, {
                aspectRatio: 1,
                viewMode: 1,
                autoCropArea: 1,
                responsive: true,
                scalable: true,
                zoomable: true,
                rotatable: true,
                minCropBoxWidth: 50,
                minCropBoxHeight: 50,
            });

            cropperInstances.push(cropper); // Store cropper instances for later use
        };
        reader.readAsDataURL(files[i]);
    }

    cropButton.style.display = 'inline-block'; // Show crop button
    cancelButton.style.display = 'inline-block'; // Show cancel button
});

cropButton.addEventListener('click', function () {
    const croppedFiles = []; // Array to hold cropped images
    const promises = cropperInstances.map((cropper, index) => {
        return new Promise((resolve) => {
            const canvas = cropper.getCroppedCanvas({
                width: 200,
                height: 100,
                imageSmoothingEnabled: true,
                imageSmoothingQuality: 'high'
            });

            canvas.toBlob(function (blob) {
                const file = new File([blob], `croppedImage-${index}.png`, { type: 'image/png' });
                croppedFiles.push(file); // Push cropped file into array
                resolve(); // Resolve promise
            }, 'image/png');
        });
    });

    Promise.all(promises).then(() => {
        // Convert cropped files to DataTransfer object
        const dataTransfer = new DataTransfer();
        croppedFiles.forEach(file => {
            dataTransfer.items.add(file);
        });

        // Set the file input with the cropped images
        imageInput.files = dataTransfer.files;

        // Optionally trigger the form submit
        cropButton.style.display = 'none';
        cancelButton.style.display = 'none';
        imagePreviewsContainer.innerHTML = ''; // Clear previews
        productForm.submit(); // Submit the form with cropped images
    });
});

cancelButton.addEventListener('click', function () {
    imageInput.value = ''; // Clear file input
    imagePreviewsContainer.innerHTML = ''; // Reset image previews
    cropButton.style.display = 'none'; // Hide crop button
    cancelButton.style.display = 'none'; // Hide cancel button
    cropperInstances.forEach(cropper => cropper.destroy()); // Destroy all cropper instances
    cropperInstances = []; // Reset cropper instances
});
 
</script>

<%- include('../layouts/footer.ejs') %>
