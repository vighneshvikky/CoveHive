<%- include('../layouts/header.ejs') %>
<%- include('../layouts/sidebar.ejs') %>
  <div class="container mx-auto px-4 py-8 flex items-center justify-center min-h-screen"> 


    <form action="/admin/product/add" method="POST" enctype="multipart/form-data" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-1/2" id="productForm" >

       <!-- Product Name -->
       <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="name">
          Product Name
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="text" 
          id="name" 
          name="name"
          value="Apple" 
          required  >
      </div>

      <!-- Description -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="description">
          Product Description
        </label>
       
        <textarea 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          id="description" 
          name="description"
          rows="3" required></textarea>
      </div>

      <!-- Price -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="price">
          Price
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="number" 
          id="price" 
          name="price" 
          value="2000"
          required>
      </div>

      
      <!-- discount -->


      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="discount">
          discount
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="text" 
          id="discount" 
          name="discount" 
          value="50"
          required>
      </div>
      <!-- Stock -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="stock">
          Stock
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="number" 
          id="stock" 
          name="stock"
          value="5" 
          required>
      </div>
      
  <!-- Color Selection -->


  <!-- Other form fields (Stock, Category, Subcategory, etc.) -->

  <!-- Submit Button -->

      <!-- Category -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="category">
            Category  
        </label>
        <select 
            id="category" 
            name="category" 
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
             required >
            <option value="">Select a Category</option>
            <% categories.forEach(category => { %>
                <option value="<%= category._id %>">
                    <%= category.name %>
                </option>
            <% }); %>
        </select>
      </div>
    
      <!-- Subcategory -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="subcategory">
          Subcategory
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="text" 
          id="subcategory" 
          name="subcategory"
          value="Apple 15 series" 
          required>
      </div>
    
      <!-- Compatible Devices -->
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="compatibleDevices">
          Compatible Devices (Comma separated)
        </label>
        <input 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" 
          type="text" 
          id="compatibleDevices" 
          value="iphone 15 Pro"
          name="compatibleDevices" 
          placeholder="iPhone 15 Pro, iPhone 15 Pro Max"
          required>
      </div>

      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="image">Product Images</label>
        <input class="shadow appearance-none border rounded w-full py-2 px-3 text-grey-700 leading-tight focus:outline-none focus:shadow-outline" type="file" id="imageInput" name="images" accept="image/*" multiple required>
      </div>
      
      <!-- Image Preview -->
      <div class="cropper-container max-w-lg mx-auto p-4 bg-gray-100 border rounded-lg">
        <div id="imagePreviews" class="flex flex-wrap justify-center gap-4">
          <!-- Dynamically insert image previews here -->
        </div>
      </div>


<!-- Crop Buttons -->
<div class="flex justify-between mt-4">
  <button 
    type="button" 
    id="cropButton" 
    style="display: none;" 
    class="bg-purple-600 text-white font-semibold py-2 px-4 rounded hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50 transition duration-300"
  >
    Add Product
  </button>
  
  <button 
    type="button" 
    id="cancelButton" 
    style="display: none;" 
    class="bg-gray-400 text-white font-semibold py-2 px-4 rounded hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-300 focus:ring-opacity-50 transition duration-300"
  >
    Cancel
  </button>
</div>




  <!-- Submit Button -->
  <div class="font-[sans-serif] space-x-4 space-y-4 text-center mt-6">
    <button type="submit" id="addProductBtn" class="px-5 py-2.5 rounded-lg text-sm tracking-wider font-medium border border-blue-700 outline-none bg-transparent hover:bg-blue-700 text-blue-700 hover:text-white transition-all duration-300 hidden">Add Product</button>
  </div>



    </form> <!-- Added ID here -->
  </div>

  <div id="productModal" class="fixed inset-0 bg-black bg-opacity-80  items-center justify-center hidden">
    <div class="bg-white p-6 rounded-lg shadow-md w-full max-w-md">
      <p class="text-center text-green-500 mb-4">Add Product Successfully.</p>
      <button id="closeModal" class="bg-blue-700 text-white px-4 py-2 rounded">Close</button>
    </div>
  </div>
  <!-- Modal -->

  <div id="confirmation-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50  items-center justify-center hidden">
    <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
        <h2 class="text-lg font-bold mb-4">Confirm Action</h2>
        <p id="modal-message" class="mb-6"></p>
        <div class="flex justify-end">
            <button id="cancel-btn" class="bg-gray-500 text-white px-4 py-2 rounded mr-2" onclick="closeModal()">Cancel</button>
            <form id="confirm-form" action="" method="POST" style="display: inline;">
                <input type="hidden" name="is_blocked" id="isBlocked" value="" />
                <button type="submit" class="bg-red-500 text-white px-4 py-2 rounded">Confirm</button>
            </form>
        </div>
    </div>
</div>

<!-- Modal -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
   document.addEventListener('DOMContentLoaded', function() {
      const addProductBtn = document.getElementById('addProductBtn');
      const productModal = document.getElementById('productModal');
      const closeModalBtn = document.getElementById('closeModal');
      const imageInput = document.getElementById('imageInput');
      const imagePreviewsContainer = document.getElementById('imagePreviews');
      const cropButton = document.getElementById('cropButton');
      const cancelButton = document.getElementById('cancelButton');
      const productForm = document.getElementById('productForm');
      const colorInput = document.getElementById('colorInput');
      const selectedColor = document.getElementById('selectedColor');
      const colorValue = document.getElementById('colorValue');
      let cropperInstances = [];

      function showModal() {
        productModal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      }

      function hideModal() {
        productModal.classList.add('hidden');
        document.body.style.overflow = '';
      }

      addProductBtn.addEventListener('click', showModal);

      window.onclick = function(event) {
        if (event.target === productModal) {
          hideModal();
        }
      };

      closeModalBtn.addEventListener('click', hideModal);

      imageInput.addEventListener('change', function (event) {
        const files = event.target.files;
        imagePreviewsContainer.innerHTML = ''; 
        cropperInstances = []; 

        for (let i = 0; i < files.length; i++) {
          const reader = new FileReader();
          reader.onload = function (e) {
            const previewContainer = document.createElement('div');
            previewContainer.className = 'relative';

            const imgElement = document.createElement('img');
            imgElement.src = e.target.result;
            imgElement.classList.add('preview-image', 'w-32', 'h-32', 'object-cover', 'rounded-lg');
            previewContainer.appendChild(imgElement);

            const removeButton = document.createElement('button');
            removeButton.className = 'absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1';
            removeButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>';
            removeButton.onclick = function() {
              previewContainer.remove();
              cropperInstances = cropperInstances.filter(instance => instance.image !== imgElement);
            };
            previewContainer.appendChild(removeButton);

            imagePreviewsContainer.appendChild(previewContainer);

            const cropper = new Cropper(imgElement, {
              aspectRatio: 1,
              viewMode: 1,
              autoCropArea: 1,
              responsive: true,
              scalable: true,
              zoomable: true,
              rotatable: true,
              minCropBoxWidth: 50,
              minCropBoxHeight: 50,
            });

            cropperInstances.push({ cropper, image: imgElement });
          };
          reader.readAsDataURL(files[i]);
        }

        cropButton.style.display = 'inline-block'; 
        cancelButton.style.display = 'inline-block'; 
      });

      cropButton.addEventListener('click', function () {
        const croppedFiles = []; 
        const promises = cropperInstances.map((instance, index) => {
          return new Promise((resolve) => {
            const canvas = instance.cropper.getCroppedCanvas({
              width: 200,
              height: 200,
              imageSmoothingEnabled: true,
              imageSmoothingQuality: 'high'
            });

            canvas.toBlob(function (blob) {
              const file = new File([blob], `croppedImage-${index}.png`, { type: 'image/png' });
              croppedFiles.push(file); 
              resolve();
            }, 'image/png');
          });
        });

        Promise.all(promises).then(() => {
          const dataTransfer = new DataTransfer();
          croppedFiles.forEach(file => {
            dataTransfer.items.add(file);
          });

          imageInput.files = dataTransfer.files;

          cropButton.style.display = 'none';
          cancelButton.style.display = 'none';
          imagePreviewsContainer.innerHTML = ''; 
          productForm.submit(); 
        });
      });

      cancelButton.addEventListener('click', function () {
        imageInput.value = ''; 
        imagePreviewsContainer.innerHTML = ''; 
        cropButton.style.display = 'none'; 
        cancelButton.style.display = 'none'; 
        cropperInstances.forEach(instance => instance.cropper.destroy()); 
        cropperInstances = []; 
      });

      // Color input change event
      colorInput.addEventListener('input', function () {
        selectedColor.textContent = colorInput.value; // Display selected color
        colorValue.value = colorInput.value; // Assign value to hidden input
      });
    });
</script>

<%- include('../layouts/footer.ejs') %>
